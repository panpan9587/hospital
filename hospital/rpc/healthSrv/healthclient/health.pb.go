// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: rpc/doc/health.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 科室表
type DoctorOfficeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	OfficeName string `protobuf:"bytes,20,opt,name=OfficeName,proto3" json:"OfficeName,omitempty"` //科室名称
	Status     int64  `protobuf:"varint,30,opt,name=Status,proto3" json:"Status,omitempty"`        //状态
}

func (x *DoctorOfficeInfo) Reset() {
	*x = DoctorOfficeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorOfficeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorOfficeInfo) ProtoMessage() {}

func (x *DoctorOfficeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorOfficeInfo.ProtoReflect.Descriptor instead.
func (*DoctorOfficeInfo) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{0}
}

func (x *DoctorOfficeInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DoctorOfficeInfo) GetOfficeName() string {
	if x != nil {
		return x.OfficeName
	}
	return ""
}

func (x *DoctorOfficeInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 套餐表
type PackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,10,opt,name=Id,proto3" json:"Id,omitempty"`
	PackageName   string `protobuf:"bytes,20,opt,name=packageName,proto3" json:"packageName,omitempty"`     //套餐名称
	PackageAmount string `protobuf:"bytes,30,opt,name=packageAmount,proto3" json:"packageAmount,omitempty"` //套餐金额
}

func (x *PackageInfo) Reset() {
	*x = PackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageInfo) ProtoMessage() {}

func (x *PackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageInfo.ProtoReflect.Descriptor instead.
func (*PackageInfo) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{1}
}

func (x *PackageInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PackageInfo) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *PackageInfo) GetPackageAmount() string {
	if x != nil {
		return x.PackageAmount
	}
	return ""
}

// 预约表
type AppointmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int64  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID          int64  `protobuf:"varint,20,opt,name=UserID,proto3" json:"UserID,omitempty"`                   //用户id
	AppointmentType int64  `protobuf:"varint,30,opt,name=AppointmentType,proto3" json:"AppointmentType,omitempty"` //预约类型 1：代表预约的是体检，2代表预约的是挂号
	Mobile          string `protobuf:"bytes,40,opt,name=Mobile,proto3" json:"Mobile,omitempty"`                    //手机号
	AppointmentData string `protobuf:"bytes,50,opt,name=AppointmentData,proto3" json:"AppointmentData,omitempty"`  //预约日期
	AppointmentTime string `protobuf:"bytes,60,opt,name=AppointmentTime,proto3" json:"AppointmentTime,omitempty"`  //预约时间
	Status          int64  `protobuf:"varint,70,opt,name=Status,proto3" json:"Status,omitempty"`                   //预约状态（1:已预约 2:已处理）
}

func (x *AppointmentInfo) Reset() {
	*x = AppointmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentInfo) ProtoMessage() {}

func (x *AppointmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentInfo.ProtoReflect.Descriptor instead.
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{2}
}

func (x *AppointmentInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AppointmentInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AppointmentInfo) GetAppointmentType() int64 {
	if x != nil {
		return x.AppointmentType
	}
	return 0
}

func (x *AppointmentInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AppointmentInfo) GetAppointmentData() string {
	if x != nil {
		return x.AppointmentData
	}
	return ""
}

func (x *AppointmentInfo) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *AppointmentInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 体检表记录
type HealthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64              `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppointmentId int64              `protobuf:"varint,20,opt,name=AppointmentId,proto3" json:"AppointmentId,omitempty"` //预约id
	UserID        int64              `protobuf:"varint,30,opt,name=UserID,proto3" json:"UserID,omitempty"`               //用户id
	RealName      string             `protobuf:"bytes,40,opt,name=RealName,proto3" json:"RealName,omitempty"`            //患者项目
	IdNumber      string             `protobuf:"bytes,50,opt,name=IdNumber,proto3" json:"IdNumber,omitempty"`            //身份证
	ProjectInfo   *HealthProjectInfo `protobuf:"bytes,90,opt,name=ProjectInfo,proto3" json:"ProjectInfo,omitempty"`      //体检项目记录
}

func (x *HealthInfo) Reset() {
	*x = HealthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthInfo) ProtoMessage() {}

func (x *HealthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthInfo.ProtoReflect.Descriptor instead.
func (*HealthInfo) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{3}
}

func (x *HealthInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *HealthInfo) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *HealthInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *HealthInfo) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *HealthInfo) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *HealthInfo) GetProjectInfo() *HealthProjectInfo {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

// 体检项目表记录
type HealthProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	HealthId     int64  `protobuf:"varint,20,opt,name=HealthId,proto3" json:"HealthId,omitempty"`        //体检id
	UserID       int64  `protobuf:"varint,30,opt,name=UserID,proto3" json:"UserID,omitempty"`            //用户id
	DoctorId     int64  `protobuf:"varint,40,opt,name=DoctorId,proto3" json:"DoctorId,omitempty"`        //医生id
	Height       uint64 `protobuf:"fixed64,50,opt,name=Height,proto3" json:"Height,omitempty"`           //身高
	Weight       uint64 `protobuf:"fixed64,60,opt,name=Weight,proto3" json:"Weight,omitempty"`           //体重
	HeartRate    int64  `protobuf:"varint,70,opt,name=HeartRate,proto3" json:"HeartRate,omitempty"`      //心率
	Hearing      string `protobuf:"bytes,80,opt,name=Hearing,proto3" json:"Hearing,omitempty"`           //听力检查
	BloodPressur string `protobuf:"bytes,90,opt,name=BloodPressur,proto3" json:"BloodPressur,omitempty"` //血压
	BloodSugar   string `protobuf:"bytes,100,opt,name=BloodSugar,proto3" json:"BloodSugar,omitempty"`    //血糖
	Urine        string `protobuf:"bytes,110,opt,name=Urine,proto3" json:"Urine,omitempty"`              //尿常规
	Ct           int64  `protobuf:"varint,120,opt,name=Ct,proto3" json:"Ct,omitempty"`                   //CT 1.胸部ct 2.脑部ct
}

func (x *HealthProjectInfo) Reset() {
	*x = HealthProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthProjectInfo) ProtoMessage() {}

func (x *HealthProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthProjectInfo.ProtoReflect.Descriptor instead.
func (*HealthProjectInfo) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{4}
}

func (x *HealthProjectInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *HealthProjectInfo) GetHealthId() int64 {
	if x != nil {
		return x.HealthId
	}
	return 0
}

func (x *HealthProjectInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *HealthProjectInfo) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *HealthProjectInfo) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *HealthProjectInfo) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *HealthProjectInfo) GetHeartRate() int64 {
	if x != nil {
		return x.HeartRate
	}
	return 0
}

func (x *HealthProjectInfo) GetHearing() string {
	if x != nil {
		return x.Hearing
	}
	return ""
}

func (x *HealthProjectInfo) GetBloodPressur() string {
	if x != nil {
		return x.BloodPressur
	}
	return ""
}

func (x *HealthProjectInfo) GetBloodSugar() string {
	if x != nil {
		return x.BloodSugar
	}
	return ""
}

func (x *HealthProjectInfo) GetUrine() string {
	if x != nil {
		return x.Urine
	}
	return ""
}

func (x *HealthProjectInfo) GetCt() int64 {
	if x != nil {
		return x.Ct
	}
	return 0
}

// 体检纪录添加 --入参
type GetHealthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64              `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppointmentId int64              `protobuf:"varint,20,opt,name=AppointmentId,proto3" json:"AppointmentId,omitempty"` //预约id
	UserID        int64              `protobuf:"varint,30,opt,name=UserID,proto3" json:"UserID,omitempty"`               //用户id
	RealName      string             `protobuf:"bytes,40,opt,name=RealName,proto3" json:"RealName,omitempty"`            //患者项目
	IdNumber      string             `protobuf:"bytes,50,opt,name=IdNumber,proto3" json:"IdNumber,omitempty"`            //身份证
	ProjectInfo   *HealthProjectInfo `protobuf:"bytes,90,opt,name=ProjectInfo,proto3" json:"ProjectInfo,omitempty"`      //体检项目记录
}

func (x *GetHealthReq) Reset() {
	*x = GetHealthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthReq) ProtoMessage() {}

func (x *GetHealthReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthReq.ProtoReflect.Descriptor instead.
func (*GetHealthReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{5}
}

func (x *GetHealthReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetHealthReq) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *GetHealthReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetHealthReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *GetHealthReq) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *GetHealthReq) GetProjectInfo() *HealthProjectInfo {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

// 体检日期
type CheckupDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentData string `protobuf:"bytes,50,opt,name=AppointmentData,proto3" json:"AppointmentData,omitempty"` //预约日期
	AppointmentTime string `protobuf:"bytes,60,opt,name=AppointmentTime,proto3" json:"AppointmentTime,omitempty"` //预约时间
}

func (x *CheckupDate) Reset() {
	*x = CheckupDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckupDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckupDate) ProtoMessage() {}

func (x *CheckupDate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckupDate.ProtoReflect.Descriptor instead.
func (*CheckupDate) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{6}
}

func (x *CheckupDate) GetAppointmentData() string {
	if x != nil {
		return x.AppointmentData
	}
	return ""
}

func (x *CheckupDate) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

// 根据AppointmentId查询体检纪录详情 --入参
type GetHealthIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentId int64 `protobuf:"varint,20,opt,name=AppointmentId,proto3" json:"AppointmentId,omitempty"` //预约id
}

func (x *GetHealthIdReq) Reset() {
	*x = GetHealthIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthIdReq) ProtoMessage() {}

func (x *GetHealthIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthIdReq.ProtoReflect.Descriptor instead.
func (*GetHealthIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{7}
}

func (x *GetHealthIdReq) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

// //根据user_id查询体检纪录详情 --反参
type GetHealthIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Health []*HealthInfo `protobuf:"bytes,10,rep,name=Health,proto3" json:"Health,omitempty"`
}

func (x *GetHealthIdResp) Reset() {
	*x = GetHealthIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthIdResp) ProtoMessage() {}

func (x *GetHealthIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthIdResp.ProtoReflect.Descriptor instead.
func (*GetHealthIdResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{8}
}

func (x *GetHealthIdResp) GetHealth() []*HealthInfo {
	if x != nil {
		return x.Health
	}
	return nil
}

// 体检纪录添加 --反参
type GetHealthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Health *HealthInfo `protobuf:"bytes,10,opt,name=Health,proto3" json:"Health,omitempty"`
}

func (x *GetHealthResp) Reset() {
	*x = GetHealthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResp) ProtoMessage() {}

func (x *GetHealthResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResp.ProtoReflect.Descriptor instead.
func (*GetHealthResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{9}
}

func (x *GetHealthResp) GetHealth() *HealthInfo {
	if x != nil {
		return x.Health
	}
	return nil
}

// 根据user_id查询体检项目详情
type HealthProjectIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,30,opt,name=UserID,proto3" json:"UserID,omitempty"` //用户id
}

func (x *HealthProjectIdReq) Reset() {
	*x = HealthProjectIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthProjectIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthProjectIdReq) ProtoMessage() {}

func (x *HealthProjectIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthProjectIdReq.ProtoReflect.Descriptor instead.
func (*HealthProjectIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{10}
}

func (x *HealthProjectIdReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 根据user_id查询体检项目详情
type HealthProjectIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectInfo *HealthProjectInfo `protobuf:"bytes,10,opt,name=ProjectInfo,proto3" json:"ProjectInfo,omitempty"`
}

func (x *HealthProjectIdResp) Reset() {
	*x = HealthProjectIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthProjectIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthProjectIdResp) ProtoMessage() {}

func (x *HealthProjectIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthProjectIdResp.ProtoReflect.Descriptor instead.
func (*HealthProjectIdResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{11}
}

func (x *HealthProjectIdResp) GetProjectInfo() *HealthProjectInfo {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

// 预约表记录 --入参
type GetAppointmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          int64  `protobuf:"varint,20,opt,name=UserID,proto3" json:"UserID,omitempty"`                   //用户id
	AppointmentType int64  `protobuf:"varint,30,opt,name=AppointmentType,proto3" json:"AppointmentType,omitempty"` //预约类型 1：代表预约的是体检，2代表预约的是挂号
	Mobile          string `protobuf:"bytes,40,opt,name=Mobile,proto3" json:"Mobile,omitempty"`                    //手机号
	AppointmentData string `protobuf:"bytes,50,opt,name=AppointmentData,proto3" json:"AppointmentData,omitempty"`  //预约日期
	AppointmentTime string `protobuf:"bytes,60,opt,name=AppointmentTime,proto3" json:"AppointmentTime,omitempty"`  //预约时间
	Status          int64  `protobuf:"varint,70,opt,name=Status,proto3" json:"Status,omitempty"`                   //预约状态（1:已预约 2:已处理）
}

func (x *GetAppointmentReq) Reset() {
	*x = GetAppointmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentReq) ProtoMessage() {}

func (x *GetAppointmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentReq.ProtoReflect.Descriptor instead.
func (*GetAppointmentReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppointmentReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetAppointmentReq) GetAppointmentType() int64 {
	if x != nil {
		return x.AppointmentType
	}
	return 0
}

func (x *GetAppointmentReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetAppointmentReq) GetAppointmentData() string {
	if x != nil {
		return x.AppointmentData
	}
	return ""
}

func (x *GetAppointmentReq) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *GetAppointmentReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 预约表记录 --反参
type GetAppointmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appointment *AppointmentInfo `protobuf:"bytes,10,opt,name=Appointment,proto3" json:"Appointment,omitempty"`
}

func (x *GetAppointmentResp) Reset() {
	*x = GetAppointmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentResp) ProtoMessage() {}

func (x *GetAppointmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentResp.ProtoReflect.Descriptor instead.
func (*GetAppointmentResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{13}
}

func (x *GetAppointmentResp) GetAppointment() *AppointmentInfo {
	if x != nil {
		return x.Appointment
	}
	return nil
}

// 获取科室详情
type GetDoctorOfficeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetDoctorOfficeReq) Reset() {
	*x = GetDoctorOfficeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorOfficeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorOfficeReq) ProtoMessage() {}

func (x *GetDoctorOfficeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorOfficeReq.ProtoReflect.Descriptor instead.
func (*GetDoctorOfficeReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{14}
}

func (x *GetDoctorOfficeReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

// 获取科室详情
type GetDoctorOfficeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorOffice *DoctorOfficeInfo `protobuf:"bytes,10,opt,name=DoctorOffice,proto3" json:"DoctorOffice,omitempty"`
}

func (x *GetDoctorOfficeResp) Reset() {
	*x = GetDoctorOfficeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorOfficeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorOfficeResp) ProtoMessage() {}

func (x *GetDoctorOfficeResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorOfficeResp.ProtoReflect.Descriptor instead.
func (*GetDoctorOfficeResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{15}
}

func (x *GetDoctorOfficeResp) GetDoctorOffice() *DoctorOfficeInfo {
	if x != nil {
		return x.DoctorOffice
	}
	return nil
}

// 获取套餐信息
type GetPackageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPackageReq) Reset() {
	*x = GetPackageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageReq) ProtoMessage() {}

func (x *GetPackageReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageReq.ProtoReflect.Descriptor instead.
func (*GetPackageReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{16}
}

func (x *GetPackageReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

// 获取套餐信息
type GetPackageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName   string       `protobuf:"bytes,20,opt,name=packageName,proto3" json:"packageName,omitempty"`     //套餐名称
	PackageAmount string       `protobuf:"bytes,30,opt,name=packageAmount,proto3" json:"packageAmount,omitempty"` //套餐金额
	CheckupDate   *CheckupDate `protobuf:"bytes,40,opt,name=CheckupDate,proto3" json:"CheckupDate,omitempty"`     //体检日期
}

func (x *GetPackageResp) Reset() {
	*x = GetPackageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_health_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageResp) ProtoMessage() {}

func (x *GetPackageResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_health_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageResp.ProtoReflect.Descriptor instead.
func (*GetPackageResp) Descriptor() ([]byte, []int) {
	return file_rpc_doc_health_proto_rawDescGZIP(), []int{17}
}

func (x *GetPackageResp) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *GetPackageResp) GetPackageAmount() string {
	if x != nil {
		return x.PackageAmount
	}
	return ""
}

func (x *GetPackageResp) GetCheckupDate() *CheckupDate {
	if x != nil {
		return x.CheckupDate
	}
	return nil
}

var File_rpc_doc_health_proto protoreflect.FileDescriptor

var file_rpc_doc_health_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x10,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x65, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xe7, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x5a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x11, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x48, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x6f, 0x64,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42,
	0x6c, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x6c, 0x6f, 0x6f, 0x64, 0x53, 0x75, 0x67, 0x61, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x53, 0x75, 0x67, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x55,
	0x72, 0x69, 0x6e, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x72, 0x69, 0x6e,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x43,
	0x74, 0x22, 0xcf, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x61, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x28, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x2c, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8d, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x75,
	0x70, 0x44, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x32, 0x8f, 0x03, 0x0a, 0x0d,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_doc_health_proto_rawDescOnce sync.Once
	file_rpc_doc_health_proto_rawDescData = file_rpc_doc_health_proto_rawDesc
)

func file_rpc_doc_health_proto_rawDescGZIP() []byte {
	file_rpc_doc_health_proto_rawDescOnce.Do(func() {
		file_rpc_doc_health_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_doc_health_proto_rawDescData)
	})
	return file_rpc_doc_health_proto_rawDescData
}

var file_rpc_doc_health_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_rpc_doc_health_proto_goTypes = []interface{}{
	(*DoctorOfficeInfo)(nil),    // 0: user.DoctorOfficeInfo
	(*PackageInfo)(nil),         // 1: user.PackageInfo
	(*AppointmentInfo)(nil),     // 2: user.AppointmentInfo
	(*HealthInfo)(nil),          // 3: user.HealthInfo
	(*HealthProjectInfo)(nil),   // 4: user.HealthProjectInfo
	(*GetHealthReq)(nil),        // 5: user.GetHealthReq
	(*CheckupDate)(nil),         // 6: user.CheckupDate
	(*GetHealthIdReq)(nil),      // 7: user.GetHealthIdReq
	(*GetHealthIdResp)(nil),     // 8: user.GetHealthIdResp
	(*GetHealthResp)(nil),       // 9: user.GetHealthResp
	(*HealthProjectIdReq)(nil),  // 10: user.HealthProjectIdReq
	(*HealthProjectIdResp)(nil), // 11: user.HealthProjectIdResp
	(*GetAppointmentReq)(nil),   // 12: user.GetAppointmentReq
	(*GetAppointmentResp)(nil),  // 13: user.GetAppointmentResp
	(*GetDoctorOfficeReq)(nil),  // 14: user.GetDoctorOfficeReq
	(*GetDoctorOfficeResp)(nil), // 15: user.GetDoctorOfficeResp
	(*GetPackageReq)(nil),       // 16: user.GetPackageReq
	(*GetPackageResp)(nil),      // 17: user.GetPackageResp
}
var file_rpc_doc_health_proto_depIdxs = []int32{
	4,  // 0: user.HealthInfo.ProjectInfo:type_name -> user.HealthProjectInfo
	4,  // 1: user.GetHealthReq.ProjectInfo:type_name -> user.HealthProjectInfo
	3,  // 2: user.GetHealthIdResp.Health:type_name -> user.HealthInfo
	3,  // 3: user.GetHealthResp.Health:type_name -> user.HealthInfo
	4,  // 4: user.HealthProjectIdResp.ProjectInfo:type_name -> user.HealthProjectInfo
	2,  // 5: user.GetAppointmentResp.Appointment:type_name -> user.AppointmentInfo
	0,  // 6: user.GetDoctorOfficeResp.DoctorOffice:type_name -> user.DoctorOfficeInfo
	6,  // 7: user.GetPackageResp.CheckupDate:type_name -> user.CheckupDate
	12, // 8: user.HealthService.GetAppointment:input_type -> user.GetAppointmentReq
	5,  // 9: user.HealthService.GetHealth:input_type -> user.GetHealthReq
	7,  // 10: user.HealthService.GetHealthId:input_type -> user.GetHealthIdReq
	10, // 11: user.HealthService.HealthProjectId:input_type -> user.HealthProjectIdReq
	14, // 12: user.HealthService.GetDoctorOffice:input_type -> user.GetDoctorOfficeReq
	16, // 13: user.HealthService.GetPackage:input_type -> user.GetPackageReq
	13, // 14: user.HealthService.GetAppointment:output_type -> user.GetAppointmentResp
	9,  // 15: user.HealthService.GetHealth:output_type -> user.GetHealthResp
	8,  // 16: user.HealthService.GetHealthId:output_type -> user.GetHealthIdResp
	11, // 17: user.HealthService.HealthProjectId:output_type -> user.HealthProjectIdResp
	15, // 18: user.HealthService.GetDoctorOffice:output_type -> user.GetDoctorOfficeResp
	17, // 19: user.HealthService.GetPackage:output_type -> user.GetPackageResp
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rpc_doc_health_proto_init() }
func file_rpc_doc_health_proto_init() {
	if File_rpc_doc_health_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_doc_health_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorOfficeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckupDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthProjectIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthProjectIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorOfficeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorOfficeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_health_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_doc_health_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_doc_health_proto_goTypes,
		DependencyIndexes: file_rpc_doc_health_proto_depIdxs,
		MessageInfos:      file_rpc_doc_health_proto_msgTypes,
	}.Build()
	File_rpc_doc_health_proto = out.File
	file_rpc_doc_health_proto_rawDesc = nil
	file_rpc_doc_health_proto_goTypes = nil
	file_rpc_doc_health_proto_depIdxs = nil
}
