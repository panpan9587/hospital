// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: rpc/doc/case.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 病历记录的结构体
type CaseRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` //询问的问题
	Result  string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`   //回答
}

func (x *CaseRecord) Reset() {
	*x = CaseRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_case_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseRecord) ProtoMessage() {}

func (x *CaseRecord) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_case_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseRecord.ProtoReflect.Descriptor instead.
func (*CaseRecord) Descriptor() ([]byte, []int) {
	return file_rpc_doc_case_proto_rawDescGZIP(), []int{0}
}

func (x *CaseRecord) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CaseRecord) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 病历记录列表的入参(使用es)
type CaseRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"` //索引名称
	Page  int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`  //分页
}

func (x *CaseRecordListReq) Reset() {
	*x = CaseRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_case_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseRecordListReq) ProtoMessage() {}

func (x *CaseRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_case_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseRecordListReq.ProtoReflect.Descriptor instead.
func (*CaseRecordListReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_case_proto_rawDescGZIP(), []int{1}
}

func (x *CaseRecordListReq) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *CaseRecordListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

// 病历记录列表的返参
type CaseRecordListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*CaseRecord `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *CaseRecordListRes) Reset() {
	*x = CaseRecordListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_case_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseRecordListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseRecordListRes) ProtoMessage() {}

func (x *CaseRecordListRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_case_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseRecordListRes.ProtoReflect.Descriptor instead.
func (*CaseRecordListRes) Descriptor() ([]byte, []int) {
	return file_rpc_doc_case_proto_rawDescGZIP(), []int{2}
}

func (x *CaseRecordListRes) GetResult() []*CaseRecord {
	if x != nil {
		return x.Result
	}
	return nil
}

// 搜索病历记录的入参(使用es)
type SearchCaseRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`     //索引名称
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //询问的问题
}

func (x *SearchCaseRecordReq) Reset() {
	*x = SearchCaseRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_case_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCaseRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCaseRecordReq) ProtoMessage() {}

func (x *SearchCaseRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_case_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCaseRecordReq.ProtoReflect.Descriptor instead.
func (*SearchCaseRecordReq) Descriptor() ([]byte, []int) {
	return file_rpc_doc_case_proto_rawDescGZIP(), []int{3}
}

func (x *SearchCaseRecordReq) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *SearchCaseRecordReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 搜索病历记录的返参
type SearchCaseRecordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SearchCaseRecordRes) Reset() {
	*x = SearchCaseRecordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_doc_case_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCaseRecordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCaseRecordRes) ProtoMessage() {}

func (x *SearchCaseRecordRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_doc_case_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCaseRecordRes.ProtoReflect.Descriptor instead.
func (*SearchCaseRecordRes) Descriptor() ([]byte, []int) {
	return file_rpc_doc_case_proto_rawDescGZIP(), []int{4}
}

func (x *SearchCaseRecordRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_rpc_doc_case_proto protoreflect.FileDescriptor

var file_rpc_doc_case_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x61, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x2d, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x94,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x19, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x73,
	0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_doc_case_proto_rawDescOnce sync.Once
	file_rpc_doc_case_proto_rawDescData = file_rpc_doc_case_proto_rawDesc
)

func file_rpc_doc_case_proto_rawDescGZIP() []byte {
	file_rpc_doc_case_proto_rawDescOnce.Do(func() {
		file_rpc_doc_case_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_doc_case_proto_rawDescData)
	})
	return file_rpc_doc_case_proto_rawDescData
}

var file_rpc_doc_case_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rpc_doc_case_proto_goTypes = []interface{}{
	(*CaseRecord)(nil),          // 0: case.CaseRecord
	(*CaseRecordListReq)(nil),   // 1: case.CaseRecordListReq
	(*CaseRecordListRes)(nil),   // 2: case.CaseRecordListRes
	(*SearchCaseRecordReq)(nil), // 3: case.SearchCaseRecordReq
	(*SearchCaseRecordRes)(nil), // 4: case.SearchCaseRecordRes
}
var file_rpc_doc_case_proto_depIdxs = []int32{
	0, // 0: case.CaseRecordListRes.result:type_name -> case.CaseRecord
	1, // 1: case.Case.CaseRecordList:input_type -> case.CaseRecordListReq
	3, // 2: case.Case.SearchCaseRecord:input_type -> case.SearchCaseRecordReq
	2, // 3: case.Case.CaseRecordList:output_type -> case.CaseRecordListRes
	4, // 4: case.Case.SearchCaseRecord:output_type -> case.SearchCaseRecordRes
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_doc_case_proto_init() }
func file_rpc_doc_case_proto_init() {
	if File_rpc_doc_case_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_doc_case_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_case_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_case_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseRecordListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_case_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCaseRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_doc_case_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCaseRecordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_doc_case_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_doc_case_proto_goTypes,
		DependencyIndexes: file_rpc_doc_case_proto_depIdxs,
		MessageInfos:      file_rpc_doc_case_proto_msgTypes,
	}.Build()
	File_rpc_doc_case_proto = out.File
	file_rpc_doc_case_proto_rawDesc = nil
	file_rpc_doc_case_proto_goTypes = nil
	file_rpc_doc_case_proto_depIdxs = nil
}
